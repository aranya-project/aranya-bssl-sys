name: "Test And Build"

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
  workflow_call:
    secrets:
      CC_BUILD_TOKEN:
        required: true
      GH_DOTCOM_TOKEN:
        required: true

env:
  REV: ${{ github.run_id }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-code:
    strategy:
      matrix:
        runner:
          # TODO(eric): re-enable after we get macOS runners.
          # - "macos-latest"
          - "self-hosted-linux-arm"
          - "self-hosted-linux-arm64"
          - "self-hosted-linux-amd64"
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup
        with:
          ghe-token: ${{ secrets.CC_BUILD_TOKEN }}
          gh-token: ${{ secrets.GH_DOTCOM_TOKEN }}
          runner: ${{ matrix.runner }}

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Check code
        run: cargo check-all-features

      - name: Clippy
        run: cargo clippy -- -D warnings

  build:
    strategy:
      matrix:
        runner:
          # TODO(eric): re-enable after we get macOS runners.
          # - "macos-latest"
          - "self-hosted-linux-arm"
          - "self-hosted-linux-arm64"
          - "self-hosted-linux-amd64"
    runs-on: ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/setup
        with:
          ghe-token: ${{ secrets.CC_BUILD_TOKEN }}
          gh-token: ${{ secrets.GH_DOTCOM_TOKEN }}
          runner: ${{ matrix.runner }}

      - name: Build code
        run: cargo build --verbose --release
